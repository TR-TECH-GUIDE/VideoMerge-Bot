{
    "name": "Telegram Video Merge Bot",
    "description": "A Telegram Video Merge Bot in Pyrogram by @TharukRenuja",
    "keywords": [
        "telegram",
        "video",
        "merge",
        "bot"
    ],
    "repository": "https://github.com/tr-tech-guide/VideoMerge-Bot",
    "website": "https://telegram.dog/TharukRenuja",
    "success_url": "https://t.me/VideoMergeslBot",
    "env": {
        "API_ID": {
            "description": "Get this value from my.telegram.org"
        },
        "API_HASH": {
            "description": "Get this value from my.telegram.org"
        },
        "BOT_TOKEN": {
            "description": "Get this from @BotFather XD"
        },
        "BOT_OWNER": {
            "description": "Bot Owner UserID"
        },
        "MONGODB_URI": {
            "description": "MongoDB Database URI for Saving UserID for Broadcast."
        },
        "UPDATES_CHANNEL": {
            "description": "ID of a Channel which you want to do Force Sub to use the bot. Example: -100123456789",
            "required": false
        },
        "LOG_CHANNEL": {
            "description": "Logs Channel ID for some Tracking XD. Example: -100123456789"
        },
        "DOWN_PATH": {
            "description": "Files download path. You can keep default. Should not end with '/'",
            "required": false,
            "value": "./downloads"
        },
        "TIME_GAP": {
            "description": "Time Gap Between Process. Keep Default.",
            "value": "5"
        },
        "MAX_VIDEOS": {
            "description": "Max Videos Allowed to Merge. Don't put more than 15.",
            "value": "5"
        },
        "SESSION_NAME": {
            "description": "Bot's Session Name."
        },
        "STREAMTAPE_API_USERNAME": {
            "description": "Your Streamtape API Username for Uploading to Streamtape if File size is bigger than 2GB."
        },
        "STREAMTAPE_API_PASS": {
            "description": "Your Streamtape API Password for Uploading to Streamtape if File size is bigger than 2GB."
        },
        "BROADCAST_AS_COPY": {
            "description": "Broadcast as Copy or with Forward Tag. Value should be True/False."
        }
    },
    "buildpacks": [ 
        {
            "url": "https://github.com/jonathanong/heroku-buildpack-ffmpeg-latest"
        }, 
        { 
            "url": "heroku/python"
        }
    ],
    "formation": {
        "worker": {
            "quantity": 1,
            "size": "free"
        }
    }
}
